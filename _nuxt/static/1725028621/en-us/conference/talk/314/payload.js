__NUXT_JSONP__("/en-us/conference/talk/314", (function(a,b){b.id=314;b.begin_time="2024-09-21T06:00:00Z";b.end_time="2024-09-21T06:45:00Z";b.is_remote=false;b.location="6-r2";b.youtube_id=a;b.title="Demystify Python Types for PEP 729";b.category="CORE";b.language="ZHEN";b.python_level="INTERMEDIATE";b.recording_policy=true;b.abstract="PEP 729 – Typing governance process proposes a new way to govern the Python type system. The PEP was endorsed by maintainers of all major type checkers. This talk aims to guide audience to understand the reason more deeply of this new process after demystifying Python types.";b.detailed_description="In this talk, the speaker will demystify python types from their theory to practice along with Python type systems. The theory includes the type theory by Per Martin-Löf and gradual typing by Jeremy Siek, all theories will be explained with the Python code in the real world. The type systems targets all major type checkers and CPython. The comparison will be based on the research: Python 3 Types in the Wild: A Tale of Two Type Systems. The practice covers how a new specifications is done in type systems. In addition, the speaker will share their thoughts about the challenges behind the implementation, and connect the answer to the reason of the PEP 729.";b.slide_link="https:\u002F\u002Fdocs.google.com\u002Fpresentation\u002Fd\u002F1SvTBz0Jh9C63glpZaejN9RyF5UnOMWM1gH7d2gcHI3M\u002Fedit?usp=sharing";b.slido_embed_link=a;b.hackmd_embed_link=a;b.speakers=[{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Fprs\u002Fmedia\u002Fcache\u002F14\u002F22\u002F1422dbae1f7d1b7c846d16e7791cd687.jpg",name:"Kir Chou",github_profile_url:"https:\u002F\u002Fgithub.com\u002Fnote35",twitter_profile_url:a,facebook_profile_url:a,bio:"This is Kir's 8th year presence in PyCon TW.\r\n\r\n💼Kir's works: Geo and Search systems to solve i18n and l10n user experience.\r\n\r\n💕Kir's hobby: 🍷🍶🍺🏂🧗⛰️🧑‍🌾🏃\r\n\r\nSee Kir's past PyCon talks in https:\u002F\u002Fnote35.github.io\u002Fabout\u002Ftalks"}];b.event_type="talk";return {data:[{speechData:b}],fetch:{},mutations:[["setSpeechData",b]]}}("",{})));