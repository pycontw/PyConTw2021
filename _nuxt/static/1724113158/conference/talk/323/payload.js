__NUXT_JSONP__("/conference/talk/323", (function(a){return {data:[{speechData:{id:323,begin_time:"2024-09-22T05:00:00Z",end_time:"2024-09-22T05:30:00Z",is_remote:false,location:"6-r2",youtube_id:a,title:"Django Apps at Scale: Mistakes to Avoid",category:"PRAC",language:"ENEN",python_level:"INTERMEDIATE",recording_policy:true,abstract:"Drawing from my journey with Python, which began in academia and expanded into professional development with Django, I've gained a wealth of experience. At StackGuardian, an Infrastructure as Code platform built on Django, I've honed my skills in crafting scalable and resilient applications. In this talk, I'll share practical strategies and real-world examples on leveraging Django within a microservices architecture to enhance scalability and maintainability, addressing common misconceptions and highlighting best practices.",detailed_description:"Agenda for the Talk:\r\n\r\n→ Monoliths & Microservices Brief Intro & general misconception\r\n- Providing a beginner-friendly introduction to Monoliths & Microservices, dispelling common misconceptions.\r\n\r\n→ Moving away from Monolith\r\n- Under this, I’ll be discussing problems with Monolith Architecture or monolith Django Apps. Here I’ll be discussing the problems with monoliths like Adapatability, Single point of failure, More coupling, difficult testing & deployments. Examples of companies that moved from Monolith to Microservice architecture.\r\n\r\n→ Why Microservices usage skyrocketed?\r\n- Sharing real-world instances of organizations that experienced significant growth after adopting Microservices architecture\r\n- Explaining the key benefits of Microservices, including enhanced ownership, reduced onboarding time, parallel development, and improved fault tolerance\r\n\r\n→ Why Django for Microservices, How to make the move & Mistakes to avoid or Best Practices\r\n- Understanding Microservice Architecture in Django through a reference application\r\n- Exploring crucial factors to consider when transitioning from monoliths to microservices, such as team scalability, service boundaries definition, resource separation, and inter-process communication\r\n- Highlighting common mistakes and best practices, including handling multiple Django apps, managing migrations effectively, optimizing signals, and avoiding overreliance on the ORM layer\r\n\r\n→ StackGuardian overview & Tirith\r\n- Providing an overview of StackGuardian’s architecture and introducing Tirith, an open-source tool built with Python designed to aid security engineers in writing machine-enforceable policies in a human-readable format\r\n\r\n→ Key Takeaway & Django Trivia\u002FQnA (Optional)\r\n- I’ll conclude the talk with fun Django Trivia.",slide_link:a,slido_embed_link:a,hackmd_embed_link:a,speakers:[{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Fprs\u002Fmedia\u002Fcache\u002F8b\u002F1e\u002F8b1e2724f0817e269fc012cf3caf40cf.jpg",name:"Kushal Vijay",github_profile_url:"https:\u002F\u002Fgithub.com\u002FKushalVijay",twitter_profile_url:"https:\u002F\u002Ftwitter.com\u002FKushalVijay_",facebook_profile_url:a,bio:"I’m Kushal Vijay, A Software Engineer @Microsoft & a Content Creator on YouTube & LinkedIn serving an audience of over 125,000. Previously, I have done Internships at Microsoft and StackGuardian. I have also given Tech talks at PyCon'22 Hong Kong and Xtreme Python'22 conferences. I'm an ACM ICPC’19 Regionalist and also mentored students in Google Code-In’19  for TensorFlow Organization.  I have taken 35+ Webinars to date in my Computer Science journey and judged multiple hackathons across Engineering Colleges in India."}],event_type:"talk"}}],fetch:{},mutations:[]}}("")));