__NUXT_JSONP__("/en-us/conference/tutorial/17", (function(a,b){b.id=17;b.begin_time="2024-09-21T02:50:00Z";b.end_time="2024-09-21T04:15:00Z";b.is_remote=false;b.location="1-r3";b.registration_link=a;b.youtube_id=a;b.title="May the Source be with You，大家來讀 Python 原始碼！";b.category="CORE";b.language="ZHEN";b.python_level="EXPERIENCED";b.recording_policy=true;b.abstract="Python 是一款容易學習的程式語言，正因為抽象化的結果，即使是初學者也能夠很快的上手並開始撰寫程式。但，你知道你正在寫的這個資料結構或是呼叫的函數是怎麼運作的嗎？或是想要知道怎樣才能寫出效能比較好的程式嗎？\r\n\r\n當然在這短短的議程無法介紹完整的原始碼，希望藉由閱讀原始碼的過程，能夠更多了解一點 Python 的運作原理，並對網路上常見的教學有更清晰的認識，不再相信沒有根據的說法，建立「單一真相來源（Single Source of Truth）」，從而提高撰寫程式時的能力和信心。";b.detailed_description="介紹如何只用一般的文字編輯器（例如 VSCode 或 Vim）來追蹤並閱讀 CPython 原始碼，即使在不會寫 C 語言的情況下，還是能以「不求甚解」方式大概推敲出某些資料結構或是函數是怎麼設計的。\r\n\r\n在這短短 45 分鐘的議程不會介紹整個 CPython 的原始碼，但希望能夠讓對 Python 內部實作有興趣的人大概知道如何踏出閱讀原始碼的第一步。";b.slide_link=a;b.slido_embed_link=a;b.hackmd_embed_link=a;b.speakers=[{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Fprs\u002Fmedia\u002Fcache\u002F36\u002Ff3\u002F36f34d1054360c01a5ee8bc9c96f1d48.jpg",name:"高見龍",github_profile_url:"https:\u002F\u002Fgithub.com\u002Fkaochenlong",twitter_profile_url:"https:\u002F\u002Ftwitter.com\u002Feddiekao",facebook_profile_url:"https:\u002F\u002Ffacebook.com\u002Feddiekao",bio:"網站程式開發者 \u002F 講師 \u002F 遊戲宅 \u002F 漫畫宅，喜愛非主流的新玩具，著有《為你自己學 Git》以及《為你自己學 Ruby on Rails》等暢銷書籍。"}];b.event_type="tutorial";return {data:[{speechData:b}],fetch:{},mutations:[["setSpeechData",b]]}}("",{})));